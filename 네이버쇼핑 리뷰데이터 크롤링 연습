{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a123040d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "페이지 1 수집 중...\n",
      "페이지 2 수집 중...\n",
      "페이지 3 수집 중...\n",
      "총 60개의 리뷰 저장 완료\n"
     ]
    }
   ],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.chrome.options import Options\n",
    "from webdriver_manager.chrome import ChromeDriverManager\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.common.exceptions import NoSuchElementException, TimeoutException, ElementClickInterceptedException\n",
    "import pandas as pd\n",
    "import time\n",
    "\n",
    "# --- 크롬 옵션 설정 ---\n",
    "options = Options()\n",
    "options.add_argument(\"window-size=1920x1080\")\n",
    "options.add_argument(\"disable-gpu\")\n",
    "options.add_argument(\"disable-infobars\")\n",
    "options.add_argument(\"disable-extensions\")\n",
    "options.add_argument(\"--no-sandbox\")\n",
    "\n",
    "# --- 드라이버 실행 ---\n",
    "service = Service(ChromeDriverManager().install())\n",
    "driver = webdriver.Chrome(service=service, options=options)\n",
    "driver.implicitly_wait(3)\n",
    "\n",
    "# --- 브랜드스토어 URL ---\n",
    "url = 'https://brand.naver.com/pmogreenjuice/products/6157332427'\n",
    "driver.get(url)\n",
    "time.sleep(3)\n",
    "\n",
    "# --- 리뷰 탭 클릭 ---\n",
    "try:\n",
    "    review_tab = WebDriverWait(driver, 10).until(\n",
    "        EC.element_to_be_clickable((By.CSS_SELECTOR, 'a[data-name=\"REVIEW\"]'))\n",
    "    )\n",
    "    review_tab.click()\n",
    "    time.sleep(3)\n",
    "except TimeoutException:\n",
    "    print(\"리뷰 탭을 찾지 못했습니다.\")\n",
    "    driver.quit()\n",
    "\n",
    "all_reviews = []\n",
    "page_count = 0\n",
    "\n",
    "while page_count < 3:  # 일단 3페이지까지만 가져오기(페이지가 늘어나면 시간이 오래걸려요)\n",
    "    page_count += 1\n",
    "    print(f\"페이지 {page_count} 수집 중...\")\n",
    "\n",
    "    reviews = driver.find_elements(By.CSS_SELECTOR, 'li.PxsZltB5tV')  # 리뷰 리스트\n",
    "    for review in reviews:\n",
    "        # “더보기” 버튼 클릭 (있는 경우만)\n",
    "        try:\n",
    "            more_btn = review.find_element(By.CSS_SELECTOR, 'a.DpXj3MxW8W')\n",
    "            try:\n",
    "                more_btn.click()\n",
    "                time.sleep(0.2)\n",
    "            except ElementClickInterceptedException:\n",
    "                pass\n",
    "        except NoSuchElementException:\n",
    "            pass\n",
    "        \n",
    "        # 리뷰 텍스트\n",
    "        try:\n",
    "            text = review.find_element(By.CSS_SELECTOR, 'div.KqJ8Qqw082.KI9_Ra6pje span.MX91DFZo2F').text\n",
    "        except NoSuchElementException:\n",
    "            text = \"\"\n",
    "        \n",
    "        # 작성일\n",
    "        try:\n",
    "            date = review.find_element(By.CSS_SELECTOR, 'span.MX91DFZo2F').text\n",
    "        except NoSuchElementException:\n",
    "            date = \"\"\n",
    "        \n",
    "        # 작성자\n",
    "        try:\n",
    "            author = review.find_element(By.CSS_SELECTOR, 'strong.MX91DFZo2F').text\n",
    "        except NoSuchElementException:\n",
    "            author = \"\"\n",
    "        \n",
    "        # 평점\n",
    "        try:\n",
    "            rating = review.find_element(By.CSS_SELECTOR, 'em.n6zq2yy0KA').text\n",
    "        except NoSuchElementException:\n",
    "            rating = \"\"\n",
    "        \n",
    "        # 구매 옵션/제품명\n",
    "        try:\n",
    "            option_text = review.find_element(By.CSS_SELECTOR, 'div.b_caIle8kC').text\n",
    "        except NoSuchElementException:\n",
    "            option_text = \"\"\n",
    "        \n",
    "        all_reviews.append({\n",
    "            \"author\": author,\n",
    "            \"date\": date,\n",
    "            \"rating\": rating,\n",
    "            \"text\": text,\n",
    "            \"option\": option_text\n",
    "        })\n",
    "    \n",
    "    # --- 페이지마다 중간 저장 ---\n",
    "    df = pd.DataFrame(all_reviews)\n",
    "    df.to_csv('reviews_partial.csv', index=False, encoding='utf-8-sig')\n",
    "    \n",
    "    # --- 다음 페이지 이동 ---\n",
    "    try:\n",
    "        next_btn = driver.find_element(By.CSS_SELECTOR, 'div.LiT9lKOVbw a.JY2WGJ4hXh[aria-hidden=\"false\"]')\n",
    "        next_btn.click()\n",
    "        time.sleep(2)\n",
    "    except NoSuchElementException:\n",
    "        print(\"마지막 페이지 도달\")\n",
    "        break\n",
    "\n",
    "# --- 최종 저장 ---\n",
    "df = pd.DataFrame(all_reviews)\n",
    "df.to_csv('reviews_full.csv', index=False, encoding='utf-8-sig')\n",
    "print(f\"총 {len(all_reviews)}개의 리뷰 저장 완료\")\n",
    "\n",
    "driver.quit()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
